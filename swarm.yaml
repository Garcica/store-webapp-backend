version: '3'

services:

  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - redisDaemonNet
      - redisStorekeeperNet

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - adminerAuthNet
      - adminerStoreNet

  authenticationDB:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
    networks:
      - authNet
      - adminerAuthNet
    volumes:
      - authVolume:/var/lib/mysql

  authenticationDBMigration:
    image: authenticationdbmigration
    environment:
      - DATABASE_URL=authenticationDB
    networks:
      - authNet

  authentication:
    image: authentication
    environment:
      - DATABASE_URL=authenticationDB
    ports:
      - "5000:5000"
    networks:
      - authNet

  storageDB:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3307:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
    networks:
      - adminNet
      - adminerStoreNet
      - buyerNet
      - daemonNet
    volumes:
      - storageVolume:/var/lib/mysql

  storageDBMigration:
    image: storagedbmigration
    environment:
      - DATABASE_URL = storageDB
      - REDIS_PORT = redis
    networks:
      - adminNet
      - buyerNet
      - daemonNet

  admin:
    image: admin
    environment:
      - DATABASE_URL = storageDB
      - REDIS_PORT = redis
    ports:
      - "5001:5001"
    networks:
      - adminNet

  storekeeper:
    image: storekeeper
    environment:
      - DATABASE_URL = storageDB
      - REDIS_PORT = redis
    ports:
      - "5002:5002"
    networks:
      - storekeeperNet
      - redisStorekeeperNet
    deploy:
      replicas: 3

  buyer:
    image: buyer
    environment:
      - DATABASE_URL = storageDB
      - REDIS_PORT = redis
    ports:
      - "5003:5003"
    networks:
      - buyerNet
    deploy:
      replicas: 3

  daemon:
    image: daemon
    environment:
      - DATABASE_URL = storageDB
      - REDIS_PORT = redis
    networks:
      - daemonNet
      - redisDaemonNet



networks:

  adminerAuthNet:
    driver: overlay

  adminerStoreNet:
    driver: overlay

  authNet:
    driver: overlay

  adminNet:
    driver: overlay

  buyerNet:
    driver: overlay

  storekeeperNet:
    driver: overlay

  daemonNet:
    driver: overlay

  redisDaemonNet:
    driver: overlay

  redisStorekeeperNet:
    driver: overlay

volumes:

  authVolume:

  storageVolume:

